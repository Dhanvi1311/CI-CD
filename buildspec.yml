version: 0.2

env:
  variables:
    AWS_REGION: "ca-central-1"  # Replace with your AWS region
    ECR_REPO_URI: "144425769143.dkr.ecr.ca-central-1.amazonaws.com/cloudapp"  # Replace with your ECR repository URI
    GITHUB_REPO: "https://github.com/Dhanvi1311/CI-CD.git"  # Replace with your GitHub repository URL
    IMAGE_NAME: "my-app"  # Replace with your Docker image name

# phases:
#   install:
#     # runtime-versions:
#     #   nodejs: 18  # Specify the Node.js runtime version
#     commands:
#       - echo Installing dependencies...
#       - yum update -y
#       - yum install -y docker
#       - yum install -y git
#       - yum install -y aws-cli
      # - npm install  # Install npm dependencies

# phases:
  pre_build:
    commands:
      - echo Logging in to AWS ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO_URI
      - echo Cloning the GitHub repository...
      - git clone $GITHUB_REPO
      - cd $(basename $GITHUB_REPO .git)  # Navigate into the cloned repo directory
      - echo Checking out the correct branch...
      - git checkout $CODEBUILD_SOURCE_VERSION
      # - echo Running lint tests...
      # - npm run lint # Run linting to check code quality
      # - echo Running unit tests...
      # - npm test # Run unit tests

  build:
    commands:
      # - echo Building the project with Webpack...
      # - npm run build # Assuming 'npm run build' executes Webpack
      - echo Building the Docker image...
      - docker build -t $IMAGE_NAME -f Dockerfile .
      - echo Tagging Docker image...
      - docker tag $IMAGE_NAME:latest $ECR_REPO_URI:latest

  post_build:
    commands:
      # - echo Scanning Docker image for vulnerabilities...
      # - docker scan $IMAGE_NAME:latest
      - echo Pushing Docker image to ECR...
      - docker push $ECR_REPO_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"myapp","imageUri":"144425769143.dkr.ecr.ca-central-1.amazonaws.com/cloudapp"}]' > imagedefinitions.json
      

artifacts:
    files: imagedefinitions.json


